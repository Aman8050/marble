
2011-01-10  Dennis Nienh√ºser <earthwings@gentoo.org>

* Change the methods
   virtual QDialog *RenderPlugin::aboutDialog() const;
   virtual QDialog *RenderPlugin::configDialog() const;
   QStandardItem   *RenderPlugin::item() const;
  to
   virtual QDialog *RenderPlugin::aboutDialog();
   virtual QDialog *RenderPlugin::configDialog();
   QStandardItem   *RenderPlugin::item();
  to be able to implement lazy loading of dialogs without cheating. Lazy
  creation of these dialogs is recommended to avoid wasting resources
  for dialogs that are likely not used.


2011-03-25  Bernhard Beschow <bbeschow@cs.tu-berlin.de>

* Remove the following methods from MarbleMap and MarbleWidget:
   void addGeoDataFile( const QString &filename );
   void addGeoDataString( const QString& data, const QString& key = "data" );
   void removeGeoData( const QString& key );
    -> use the respective methods of MarbleModel
   void openGpxFile( const QString &filename );
    -> use MarbleModel::addGeoDataFile(...);
   MARBLE_DEPRECATED( void addPlacemarkFile( const QString &filename ) );
   MARBLE_DEPRECATED( void addPlacemarkData( const QString& data, const QString& key = "data" ) );
   MARBLE_DEPRECATED( void removePlacemarkKey( const QString& key ) );
    -> use addGeoDataFile, addGeoDataString, removeGeoData of MarbleModel


2011-03-25  Bernhard Beschow <bbeschow@cs.tu-berlin.de>

* Remove the following methods from MarbleMap and MarbleWidget, use the respective methods of MarbleModel:
    void clearPersistentTileCache();
    void setPersistentTileCacheLimit( quint64 kiloBytes );
    quint64 persistentTileCacheLimit() const;


2011-03-25  Bernhard Beschow <bbeschow@cs.tu-berlin.de>

* Remove the following methods from MarbleMap and MarbleWidget, use the respective methods of MarbleModel:
    FileViewModel * fileViewModel() const;
    QAbstractItemModel *placemarkModel() const;
    QItemSelectionModel *placemarkSelectionModel() const;


2011-03-25  Bernhard Beschow <bbeschow@cs.tu-berlin.de>

* Remove the following method from MarbleMap and MarbleWidget, use the respective method of MarbleModel:
    SunLocator* sunLocator();


2011-03-25  Bernhard Beschow <bbeschow@cs.tu-berlin.de>

* Remove the following method from MarbleWidget:
    void addBookmark( const GeoDataPlacemark &bookmark, const QString &folderName ) const;
    QString bookmarkFile() const;
    bool loadBookmarkFile( const QString& relativeFileName);
    QVector<GeoDataFolder*> bookmarkFolders();
    void removeAllBookmarks();
    void addNewBookmarkFolder( const QString& name ) const;
  Instead, use the respective methods of BookmarkManager, accessible through MarbleModel.
  Hint: The methods bookmarkFolders() and loadBookmarkFile() are named folders() and loadFile() in BookmarkManager.
