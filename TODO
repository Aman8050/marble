This file describes what we need to do before certain milestones.

Mark those tasks that you want to perform with your name:
 INGE   Inge Wallin
 TACK   Tackat (Torsten Rahn)
 CARU   Carlos Licea
 MURA   Murad Tagirov


Before Version 0.4 (Monday June, 11th)
----------------------------------------------------------------

Hard requirements for the release:
 * Add Downloadmanager class for tiles and Wikipedia articles           TACK
 * Fix image downloading for Wikipedia                                  TACK
 * Creating tiles during build and fix designer plugin dirs             --
 * Settings saving                                                      --

Features
 * Add "Export Map" to save a screenshot as an image file               DONE
 * Add "Print" to print a screenshot                                    DONE

Cleaning
 * Make the ChangeLog file follow the GNU format.                       DONE
 * No inline functions in the public classes                            DONE
   - MarbleWidget                                                       done
   - MarbleModel                                                        done
   - MarbleControlBox                                                   done
 * d-pointerify the public classes                                      INGE
   - MarbleWidget                                                       done
   - MarbleModel                                                        done
   - MarbleControlBox                                                   --

 * Installation issues                                                  TACK
   - Move MarbleControlBox to src/lib/                                  --


During the SoC projects (0.5)
----------------------------------------------------------------

Misc
 * Create a file with use cases and personas                            TACK

Cleaning:
 * Make all files follow the coding standards (See CLEANING)            DONE
 * Filename == Classname (CamelCasing)                                  ----
 * Specially prioritized
   - MapTheme

Widget:
 * Separate the view from the globe (model)                             INGE
    - Let the view parameters be in the view instead of in the globe    inge
    - Don't open any dialogs from the globe, do it from the controller. inge
    - Let the view know about the globe, but not the other way.         done

Vector backend
 * Better scalability

Integration with Qt designer
 * control files for the following widgets                              TACK
   - MarbleLocator (search field for placemarks)                        --
   - MarbleControlBox                                                   --
   - MarbleLegend                                                       --

 * Installation issues                                                  TACK
   - Only install MarbleWidget.h and MarbleControlBox.h                 --

Documentation
 * Coding standards                                                     DONE
 * APIDOX: Class and method docs for at least:                          INGE
   - MarbleWidget                                                       done
   - MarbleControlBox                                                   --
   - MarbleModel                                                        --

OpenStreetMap support for tiles@home
    - we'd like to get the tiles loaded and displayed                   TACK


Integration of Google Summer of Code projects (0.6)
----------------------------------------------------------------

GPS support
 * Read GPX files                                                       ----
 * Show waypoints                                                       ----
 * Show tracks                                                          ----
 * Show 'You are here' using the GPS.                                   ----

KML support (Murad Tagirov)
 * One overall aim: make Digikam KML output and plasma weather applet 
   work together with Marble. 

2D View
 * create an additional class FlatTextureMapper that will work 
   scanline based like SphereTextureMapper (using getPixelValue).
 * Modify the input handler to take the flat projection into account.
 * Adjust the vector mapping backend as well as the PlaceMark 
   placing backend.
 * Create a new class for Texturemapping that doesn't work scanlinebased 
   anymore but uses the tiles as a whole on a kind of ScrollView.


Before KDE 4.0
----------------------------------------------------------------

Widget:
 * Make it possible to paint on different device types in addition      ----
   to painting on the KAtlasView widget
    - QGraphicsView                                                     --
    - QPixmap                                                           --
    - QSvgRendrerer                                                     --
   Offer accessor method for the Pixmap, so it can be used to export 
   the image, print it and copy it.

Make it a KDE4 application as a real member of kdeedu.
 * KApplication                                                         DONE
 * AboutData                                                            DONE
 * KConfig XT                                                           TACK
 * Translation                                                          TACK
 * User docs                                                            DONE
 * KDEPrint support                                                     TACK
 * DBus Support                                                         TACK

Add a simple alternative Qt4 frontend                                   DONE

 
Before KDE 4.1
----------------------------------------------------------------
 * Support to display Timezones
 * Evaluate the implementation of tile specifications like 

   http://wiki.osgeo.org/index.php/WMS_Tiling_Client_Recommendation
   http://wiki.osgeo.org/index.php/Tile_Map_Service_Specification

   for practical relevance and implement those bits into our client that 
   make sense for us to have.


