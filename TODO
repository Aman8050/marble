This file describes what we need to do before certain milestones.

Mark those tasks that you want to perform with your name:
 INGE	Inge Wallin
 TACK	Tackat (Torsten Rahn)


Before Version 0.4 (mid april)
----------------------------------------------------------------

Features
 * Add Downloadmanager class for tiles and Wikipedia articles		TACK
 * Fix image downloading for Wikipedia					TACK

Cleaning
 * Make the ChangeLog file follow the GNU format.                       INGE


Before the SoC projects start (0.5)
----------------------------------------------------------------

Misc
 * Create a file with use cases and personas				TACK
 * Create a file that describes the coding standards			INGE

Cleaning:
 * Make all files follow the coding standards (See CLEANING)		----
 * One class per file							----
 * Filename == Classname (CamelCasing)					----

Widget:
 * Separate the view from the globe (model)				INGE
    - Let the view parameters be in the view instead of in the globe	inge
    - Don't open any dialogs from the globe, do it from the controller.	inge
    - Let the view know about the globe, but not the other way.		done
 * Create MarbleWidget with a view (currently: KAtlasView) and a	----
    model (currently: KAtlasGlobe)

Vector backend
 * Better scalability


Integration of Google Summer of Code projects (0.6)
----------------------------------------------------------------

GPS support
 * Read GPX files							----
 * Show waypoints							----
 * Show tracks								----
 * Show 'You are here' using the GPS.					----

KML support
 * One overall aim: make Digikam KML output and plasma weather applet 
   work together with Marble. 

2D View
 * create an additional class FlatTextureMapper that will work 
   scanline based like SphereTextureMapper (using getPixelValue).
 * Modify the input handler to take the flat projection into account.
 * Adjust the vector mapping backend as well as the PlaceMark 
   placing backend.
 * Create a new class for Texturemapping that doesn't work scanlinebased 
   anymore but uses the tiles as a whole on a kind of ScrollView.


Before KDE 4.0
----------------------------------------------------------------

Widget:
 * Make it possible to paint on different device types in addition	----
   to painting on the KAtlasView widget
    - QGraphicsView							--
    - QPixmap 								--
    - QSvgRendrerer							--
   Offer accessor method for the Pixmap, so it can be used to export 
   the image, print it and copy it.

Make it a KDE4 application as a real member of kdeedu.
 * KApplication
 * AboutData
 * KConfig XT
 * Translation
 * Docs
 * KDEPrint support
 * DBus Support

Add a simple alternative Qt4 frontend					TACK

 
Before KDE 4.1
----------------------------------------------------------------
 * Support to display Timezones
 * Evaluate the implementation of tile specifications like 

   http://wiki.osgeo.org/index.php/WMS_Tiling_Client_Recommendation
   http://wiki.osgeo.org/index.php/Tile_Map_Service_Specification

   for practical relevance and implement those bits into our client that 
   make sense for us to have.


